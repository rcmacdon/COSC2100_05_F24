<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="employeeSampleDataSet1" targetNamespace="http://tempuri.org/employeeSampleDataSet1.xsd" xmlns:mstns="http://tempuri.org/employeeSampleDataSet1.xsd" xmlns="http://tempuri.org/employeeSampleDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="employeeSampleConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="employeeSampleConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Week10DemoA_DataBindingPlus.Properties.Settings.GlobalReference.Default.employeeSampleConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countriesTableAdapter" GeneratorDataComponentClassName="countriesTableAdapter" Name="countries" UserDataComponentName="countriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="employeeSampleConnectionString (Settings)" DbObjectName="employeeSample.dbo.countries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[countries] WHERE (([countryID] = @Original_countryID) AND ((@IsNull_countryName = 1 AND [countryName] IS NULL) OR ([countryName] = @Original_countryName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_countryID" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="countryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_countryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_countryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[countries] ([countryID], [countryName]) VALUES (@countryID, @countryName);
SELECT countryID, countryName FROM countries WHERE (countryID = @countryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@countryID" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="countryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@countryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT countryID, countryName FROM dbo.countries</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[countries] SET [countryID] = @countryID, [countryName] = @countryName WHERE (([countryID] = @Original_countryID) AND ((@IsNull_countryName = 1 AND [countryName] IS NULL) OR ([countryName] = @Original_countryName)));
SELECT countryID, countryName FROM countries WHERE (countryID = @countryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@countryID" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="countryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@countryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_countryID" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="countryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_countryName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_countryName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="countryName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="countryID" DataSetColumn="countryID" />
              <Mapping SourceColumn="countryName" DataSetColumn="countryName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="employeeSampleDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="employeeSampleDataSet1" msprop:Generator_DataSetName="employeeSampleDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="countries" msprop:Generator_RowEvHandlerName="countriesRowChangeEventHandler" msprop:Generator_RowDeletedName="countriesRowDeleted" msprop:Generator_RowDeletingName="countriesRowDeleting" msprop:Generator_RowEvArgName="countriesRowChangeEvent" msprop:Generator_TablePropName="countries" msprop:Generator_RowChangedName="countriesRowChanged" msprop:Generator_RowChangingName="countriesRowChanging" msprop:Generator_TableClassName="countriesDataTable" msprop:Generator_RowClassName="countriesRow" msprop:Generator_TableVarName="tablecountries" msprop:Generator_UserTableName="countries">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="countryID" msprop:Generator_ColumnPropNameInRow="countryID" msprop:Generator_ColumnPropNameInTable="countryIDColumn" msprop:Generator_ColumnVarNameInTable="columncountryID" msprop:Generator_UserColumnName="countryID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="countryName" msprop:Generator_ColumnPropNameInRow="countryName" msprop:Generator_ColumnPropNameInTable="countryNameColumn" msprop:Generator_ColumnVarNameInTable="columncountryName" msprop:Generator_UserColumnName="countryName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:countries" />
      <xs:field xpath="mstns:countryID" />
    </xs:unique>
  </xs:element>
</xs:schema>